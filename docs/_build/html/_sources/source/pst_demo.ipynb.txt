{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Example Object-Oriented Access to the PEST Control File\n",
    "\n",
    "The `pst_handler` module with `pyemu.pst` contains the `Pst` class for dealing with pest control files.  It relies heavily on `pandas` to deal with tabular sections, such as parameters, observations, and prior information.  This jupyter notebook shows how to create a control-file object (instantiate the class or make an instance of the class), how to access attributes of the class, and how to call an instance method."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": [
    "import os\n",
    "import numpy as np\n",
    "import pyemu\n",
    "from pyemu import Pst"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "A PEST control file is required to make the object, and we need to pass the name of the PEST control file as a parameter to the __init__ method for the class.  The class instance (or object)\n",
    "is assigned to the variable *p*."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": [
    "pst_name = os.path.join(\"..\", \"..\", \"examples\", \"henry\",\"pest.pst\")\n",
    "p = Pst(pst_name)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Now all of the relevant parts of the pest control file are attributes of the object.\n",
    "For example, the parameter_data, observation data, and prior information are available as pandas dataframes.\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style>\n",
       "    .dataframe thead tr:only-child th {\n",
       "        text-align: right;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: left;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>parnme</th>\n",
       "      <th>partrans</th>\n",
       "      <th>parchglim</th>\n",
       "      <th>parval1</th>\n",
       "      <th>parlbnd</th>\n",
       "      <th>parubnd</th>\n",
       "      <th>pargp</th>\n",
       "      <th>scale</th>\n",
       "      <th>offset</th>\n",
       "      <th>dercom</th>\n",
       "      <th>extra</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>parnme</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>global_k</th>\n",
       "      <td>global_k</td>\n",
       "      <td>log</td>\n",
       "      <td>factor</td>\n",
       "      <td>200.0</td>\n",
       "      <td>150.00</td>\n",
       "      <td>250.00</td>\n",
       "      <td>m</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>mult1</th>\n",
       "      <td>mult1</td>\n",
       "      <td>log</td>\n",
       "      <td>factor</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.75</td>\n",
       "      <td>1.25</td>\n",
       "      <td>m</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>mult2</th>\n",
       "      <td>mult2</td>\n",
       "      <td>log</td>\n",
       "      <td>factor</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.50</td>\n",
       "      <td>2.00</td>\n",
       "      <td>m</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>kr01c01</th>\n",
       "      <td>kr01c01</td>\n",
       "      <td>log</td>\n",
       "      <td>factor</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.10</td>\n",
       "      <td>10.00</td>\n",
       "      <td>p</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>kr01c02</th>\n",
       "      <td>kr01c02</td>\n",
       "      <td>log</td>\n",
       "      <td>factor</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.10</td>\n",
       "      <td>10.00</td>\n",
       "      <td>p</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "            parnme partrans parchglim  parval1  parlbnd  parubnd pargp  scale  \\\n",
       "parnme                                                                          \n",
       "global_k  global_k      log    factor    200.0   150.00   250.00     m    1.0   \n",
       "mult1        mult1      log    factor      1.0     0.75     1.25     m    1.0   \n",
       "mult2        mult2      log    factor      1.0     0.50     2.00     m    1.0   \n",
       "kr01c01    kr01c01      log    factor      1.0     0.10    10.00     p    1.0   \n",
       "kr01c02    kr01c02      log    factor      1.0     0.10    10.00     p    1.0   \n",
       "\n",
       "          offset  dercom  extra  \n",
       "parnme                           \n",
       "global_k     0.0       1    NaN  \n",
       "mult1        0.0       1    NaN  \n",
       "mult2        0.0       1    NaN  \n",
       "kr01c01      0.0       1    NaN  \n",
       "kr01c02      0.0       1    NaN  "
      ]
     },
     "execution_count": 15,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "p.parameter_data.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style>\n",
       "    .dataframe thead tr:only-child th {\n",
       "        text-align: right;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: left;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>obsnme</th>\n",
       "      <th>obsval</th>\n",
       "      <th>weight</th>\n",
       "      <th>obgnme</th>\n",
       "      <th>extra</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>obsnme</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>h_obs01_1</th>\n",
       "      <td>h_obs01_1</td>\n",
       "      <td>0.051396</td>\n",
       "      <td>152.1458</td>\n",
       "      <td>head</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>h_obs01_2</th>\n",
       "      <td>h_obs01_2</td>\n",
       "      <td>0.022156</td>\n",
       "      <td>0.0000</td>\n",
       "      <td>head</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>h_obs02_1</th>\n",
       "      <td>h_obs02_1</td>\n",
       "      <td>0.046879</td>\n",
       "      <td>152.1458</td>\n",
       "      <td>head</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>h_obs02_2</th>\n",
       "      <td>h_obs02_2</td>\n",
       "      <td>0.020853</td>\n",
       "      <td>0.0000</td>\n",
       "      <td>head</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>h_obs03_1</th>\n",
       "      <td>h_obs03_1</td>\n",
       "      <td>0.036584</td>\n",
       "      <td>152.1458</td>\n",
       "      <td>head</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "              obsnme    obsval    weight obgnme  extra\n",
       "obsnme                                                \n",
       "h_obs01_1  h_obs01_1  0.051396  152.1458   head    NaN\n",
       "h_obs01_2  h_obs01_2  0.022156    0.0000   head    NaN\n",
       "h_obs02_1  h_obs02_1  0.046879  152.1458   head    NaN\n",
       "h_obs02_2  h_obs02_2  0.020853    0.0000   head    NaN\n",
       "h_obs03_1  h_obs03_1  0.036584  152.1458   head    NaN"
      ]
     },
     "execution_count": 16,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "p.observation_data.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style>\n",
       "    .dataframe thead tr:only-child th {\n",
       "        text-align: right;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: left;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>equation</th>\n",
       "      <th>obgnme</th>\n",
       "      <th>pilbl</th>\n",
       "      <th>weight</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>pilbl</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>mult1</th>\n",
       "      <td>1.0 * log(mult1) = 0.000000</td>\n",
       "      <td>regul_m</td>\n",
       "      <td>mult1</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>kr01c01</th>\n",
       "      <td>1.0 * log(kr01c01) = 0.0</td>\n",
       "      <td>regul_p</td>\n",
       "      <td>kr01c01</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>kr01c02</th>\n",
       "      <td>1.0 * log(kr01c02) = 0.0</td>\n",
       "      <td>regul_p</td>\n",
       "      <td>kr01c02</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>kr01c03</th>\n",
       "      <td>1.0 * log(kr01c03) = 0.0</td>\n",
       "      <td>regul_p</td>\n",
       "      <td>kr01c03</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>kr01c04</th>\n",
       "      <td>1.0 * log(kr01c04) = 0.0</td>\n",
       "      <td>regul_p</td>\n",
       "      <td>kr01c04</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                            equation   obgnme    pilbl  weight\n",
       "pilbl                                                         \n",
       "mult1    1.0 * log(mult1) = 0.000000  regul_m    mult1     1.0\n",
       "kr01c01     1.0 * log(kr01c01) = 0.0  regul_p  kr01c01     1.0\n",
       "kr01c02     1.0 * log(kr01c02) = 0.0  regul_p  kr01c02     1.0\n",
       "kr01c03     1.0 * log(kr01c03) = 0.0  regul_p  kr01c03     1.0\n",
       "kr01c04     1.0 * log(kr01c04) = 0.0  regul_p  kr01c04     1.0"
      ]
     },
     "execution_count": 17,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "p.prior_information.head()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "The client-code can be used to change values in the dataframes that can be written to \n",
    "a new or updated control file using the `write()` method as shown at the end of the notebook."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style>\n",
       "    .dataframe thead tr:only-child th {\n",
       "        text-align: right;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: left;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>parnme</th>\n",
       "      <th>partrans</th>\n",
       "      <th>parchglim</th>\n",
       "      <th>parval1</th>\n",
       "      <th>parlbnd</th>\n",
       "      <th>parubnd</th>\n",
       "      <th>pargp</th>\n",
       "      <th>scale</th>\n",
       "      <th>offset</th>\n",
       "      <th>dercom</th>\n",
       "      <th>extra</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>parnme</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>global_k</th>\n",
       "      <td>global_k</td>\n",
       "      <td>log</td>\n",
       "      <td>factor</td>\n",
       "      <td>225.0</td>\n",
       "      <td>150.00</td>\n",
       "      <td>250.00</td>\n",
       "      <td>m</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>mult1</th>\n",
       "      <td>mult1</td>\n",
       "      <td>log</td>\n",
       "      <td>factor</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.75</td>\n",
       "      <td>1.25</td>\n",
       "      <td>m</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>mult2</th>\n",
       "      <td>mult2</td>\n",
       "      <td>log</td>\n",
       "      <td>factor</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.50</td>\n",
       "      <td>2.00</td>\n",
       "      <td>m</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>kr01c01</th>\n",
       "      <td>kr01c01</td>\n",
       "      <td>log</td>\n",
       "      <td>factor</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.10</td>\n",
       "      <td>10.00</td>\n",
       "      <td>p</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>kr01c02</th>\n",
       "      <td>kr01c02</td>\n",
       "      <td>log</td>\n",
       "      <td>factor</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.10</td>\n",
       "      <td>10.00</td>\n",
       "      <td>p</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "            parnme partrans parchglim  parval1  parlbnd  parubnd pargp  scale  \\\n",
       "parnme                                                                          \n",
       "global_k  global_k      log    factor    225.0   150.00   250.00     m    1.0   \n",
       "mult1        mult1      log    factor      1.0     0.75     1.25     m    1.0   \n",
       "mult2        mult2      log    factor      1.0     0.50     2.00     m    1.0   \n",
       "kr01c01    kr01c01      log    factor      1.0     0.10    10.00     p    1.0   \n",
       "kr01c02    kr01c02      log    factor      1.0     0.10    10.00     p    1.0   \n",
       "\n",
       "          offset  dercom  extra  \n",
       "parnme                           \n",
       "global_k     0.0       1    NaN  \n",
       "mult1        0.0       1    NaN  \n",
       "mult2        0.0       1    NaN  \n",
       "kr01c01      0.0       1    NaN  \n",
       "kr01c02      0.0       1    NaN  "
      ]
     },
     "execution_count": 18,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "p.parameter_data.loc['global_k', 'parval1'] = 225\n",
    "p.parameter_data.head()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "A residual file (`.rei` or `res`) can also be passed to the `resfile` argument at instantiation to enable some simple residual analysis and evaluate if weight adjustments are needed.  If `resfile = False`, or not supplied, and if the residual file is in the same directory as the pest control file and has the same base name, it will be accessed automatically:\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style>\n",
       "    .dataframe thead tr:only-child th {\n",
       "        text-align: right;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: left;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>name</th>\n",
       "      <th>group</th>\n",
       "      <th>measured</th>\n",
       "      <th>modelled</th>\n",
       "      <th>residual</th>\n",
       "      <th>weight</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>name</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>h_obs01_1</th>\n",
       "      <td>h_obs01_1</td>\n",
       "      <td>head</td>\n",
       "      <td>0.051396</td>\n",
       "      <td>0.080402</td>\n",
       "      <td>-0.029006</td>\n",
       "      <td>152.1458</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>h_obs01_2</th>\n",
       "      <td>h_obs01_2</td>\n",
       "      <td>head</td>\n",
       "      <td>0.022156</td>\n",
       "      <td>0.036898</td>\n",
       "      <td>-0.014742</td>\n",
       "      <td>0.0000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>h_obs02_1</th>\n",
       "      <td>h_obs02_1</td>\n",
       "      <td>head</td>\n",
       "      <td>0.046879</td>\n",
       "      <td>0.069121</td>\n",
       "      <td>-0.022241</td>\n",
       "      <td>152.1458</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>h_obs02_2</th>\n",
       "      <td>h_obs02_2</td>\n",
       "      <td>head</td>\n",
       "      <td>0.020853</td>\n",
       "      <td>0.034311</td>\n",
       "      <td>-0.013458</td>\n",
       "      <td>0.0000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>h_obs03_1</th>\n",
       "      <td>h_obs03_1</td>\n",
       "      <td>head</td>\n",
       "      <td>0.036584</td>\n",
       "      <td>0.057722</td>\n",
       "      <td>-0.021138</td>\n",
       "      <td>152.1458</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                name group  measured  modelled  residual    weight\n",
       "name                                                              \n",
       "h_obs01_1  h_obs01_1  head  0.051396  0.080402 -0.029006  152.1458\n",
       "h_obs01_2  h_obs01_2  head  0.022156  0.036898 -0.014742    0.0000\n",
       "h_obs02_1  h_obs02_1  head  0.046879  0.069121 -0.022241  152.1458\n",
       "h_obs02_2  h_obs02_2  head  0.020853  0.034311 -0.013458    0.0000\n",
       "h_obs03_1  h_obs03_1  head  0.036584  0.057722 -0.021138  152.1458"
      ]
     },
     "execution_count": 19,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "p.res.head()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "The weights can be updated by changing values in the observation dataframe."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style>\n",
       "    .dataframe thead tr:only-child th {\n",
       "        text-align: right;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: left;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>obsnme</th>\n",
       "      <th>obsval</th>\n",
       "      <th>weight</th>\n",
       "      <th>obgnme</th>\n",
       "      <th>extra</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>obsnme</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>h_obs01_1</th>\n",
       "      <td>h_obs01_1</td>\n",
       "      <td>0.051396</td>\n",
       "      <td>25.0000</td>\n",
       "      <td>head</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>h_obs01_2</th>\n",
       "      <td>h_obs01_2</td>\n",
       "      <td>0.022156</td>\n",
       "      <td>0.0000</td>\n",
       "      <td>head</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>h_obs02_1</th>\n",
       "      <td>h_obs02_1</td>\n",
       "      <td>0.046879</td>\n",
       "      <td>152.1458</td>\n",
       "      <td>head</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>h_obs02_2</th>\n",
       "      <td>h_obs02_2</td>\n",
       "      <td>0.020853</td>\n",
       "      <td>0.0000</td>\n",
       "      <td>head</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>h_obs03_1</th>\n",
       "      <td>h_obs03_1</td>\n",
       "      <td>0.036584</td>\n",
       "      <td>152.1458</td>\n",
       "      <td>head</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "              obsnme    obsval    weight obgnme  extra\n",
       "obsnme                                                \n",
       "h_obs01_1  h_obs01_1  0.051396   25.0000   head    NaN\n",
       "h_obs01_2  h_obs01_2  0.022156    0.0000   head    NaN\n",
       "h_obs02_1  h_obs02_1  0.046879  152.1458   head    NaN\n",
       "h_obs02_2  h_obs02_2  0.020853    0.0000   head    NaN\n",
       "h_obs03_1  h_obs03_1  0.036584  152.1458   head    NaN"
      ]
     },
     "execution_count": 20,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "p.observation_data.loc['h_obs01_1', 'weight'] = 25.0\n",
    "p.observation_data.head()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "The `Pst` class exposes a method, `get()`, to create a new `Pst` instance with a subset of parameters and or observations.  For example, make a new PEST control-file object using the first 10 entries from the \n",
    "parameter and observation dataframes. Note this method does not propogate prior information to the new instance:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style>\n",
       "    .dataframe thead tr:only-child th {\n",
       "        text-align: right;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: left;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>equation</th>\n",
       "      <th>obgnme</th>\n",
       "      <th>pilbl</th>\n",
       "      <th>weight</th>\n",
       "      <th>names</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>pilbl</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>mult1</th>\n",
       "      <td>1.0 * log(mult1) = 0.000000</td>\n",
       "      <td>regul_m</td>\n",
       "      <td>mult1</td>\n",
       "      <td>1.0</td>\n",
       "      <td>[mult1]</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>kr01c01</th>\n",
       "      <td>1.0 * log(kr01c01) = 0.0</td>\n",
       "      <td>regul_p</td>\n",
       "      <td>kr01c01</td>\n",
       "      <td>1.0</td>\n",
       "      <td>[kr01c01]</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>kr01c02</th>\n",
       "      <td>1.0 * log(kr01c02) = 0.0</td>\n",
       "      <td>regul_p</td>\n",
       "      <td>kr01c02</td>\n",
       "      <td>1.0</td>\n",
       "      <td>[kr01c02]</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>kr01c03</th>\n",
       "      <td>1.0 * log(kr01c03) = 0.0</td>\n",
       "      <td>regul_p</td>\n",
       "      <td>kr01c03</td>\n",
       "      <td>1.0</td>\n",
       "      <td>[kr01c03]</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>kr01c04</th>\n",
       "      <td>1.0 * log(kr01c04) = 0.0</td>\n",
       "      <td>regul_p</td>\n",
       "      <td>kr01c04</td>\n",
       "      <td>1.0</td>\n",
       "      <td>[kr01c04]</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                            equation   obgnme    pilbl  weight      names\n",
       "pilbl                                                                    \n",
       "mult1    1.0 * log(mult1) = 0.000000  regul_m    mult1     1.0    [mult1]\n",
       "kr01c01     1.0 * log(kr01c01) = 0.0  regul_p  kr01c01     1.0  [kr01c01]\n",
       "kr01c02     1.0 * log(kr01c02) = 0.0  regul_p  kr01c02     1.0  [kr01c02]\n",
       "kr01c03     1.0 * log(kr01c03) = 0.0  regul_p  kr01c03     1.0  [kr01c03]\n",
       "kr01c04     1.0 * log(kr01c04) = 0.0  regul_p  kr01c04     1.0  [kr01c04]"
      ]
     },
     "execution_count": 21,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "pnew = p.get(p.par_names[:10],p.obs_names[:10])\n",
    "pnew.prior_information.head()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Check the parameter_data and observation_data dataframes for the new object, note that\n",
    "the updated values for `global_k` `parval1` and `h_obs01_1` `weight` are in these dataframes."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style>\n",
       "    .dataframe thead tr:only-child th {\n",
       "        text-align: right;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: left;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>parnme</th>\n",
       "      <th>partrans</th>\n",
       "      <th>parchglim</th>\n",
       "      <th>parval1</th>\n",
       "      <th>parlbnd</th>\n",
       "      <th>parubnd</th>\n",
       "      <th>pargp</th>\n",
       "      <th>scale</th>\n",
       "      <th>offset</th>\n",
       "      <th>dercom</th>\n",
       "      <th>extra</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>parnme</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>global_k</th>\n",
       "      <td>global_k</td>\n",
       "      <td>log</td>\n",
       "      <td>factor</td>\n",
       "      <td>225.0</td>\n",
       "      <td>150.00</td>\n",
       "      <td>250.00</td>\n",
       "      <td>m</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>mult1</th>\n",
       "      <td>mult1</td>\n",
       "      <td>log</td>\n",
       "      <td>factor</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.75</td>\n",
       "      <td>1.25</td>\n",
       "      <td>m</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>mult2</th>\n",
       "      <td>mult2</td>\n",
       "      <td>log</td>\n",
       "      <td>factor</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.50</td>\n",
       "      <td>2.00</td>\n",
       "      <td>m</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>kr01c01</th>\n",
       "      <td>kr01c01</td>\n",
       "      <td>log</td>\n",
       "      <td>factor</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.10</td>\n",
       "      <td>10.00</td>\n",
       "      <td>p</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>kr01c02</th>\n",
       "      <td>kr01c02</td>\n",
       "      <td>log</td>\n",
       "      <td>factor</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.10</td>\n",
       "      <td>10.00</td>\n",
       "      <td>p</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "            parnme partrans parchglim  parval1  parlbnd  parubnd pargp  scale  \\\n",
       "parnme                                                                          \n",
       "global_k  global_k      log    factor    225.0   150.00   250.00     m    1.0   \n",
       "mult1        mult1      log    factor      1.0     0.75     1.25     m    1.0   \n",
       "mult2        mult2      log    factor      1.0     0.50     2.00     m    1.0   \n",
       "kr01c01    kr01c01      log    factor      1.0     0.10    10.00     p    1.0   \n",
       "kr01c02    kr01c02      log    factor      1.0     0.10    10.00     p    1.0   \n",
       "\n",
       "          offset  dercom  extra  \n",
       "parnme                           \n",
       "global_k     0.0       1    NaN  \n",
       "mult1        0.0       1    NaN  \n",
       "mult2        0.0       1    NaN  \n",
       "kr01c01      0.0       1    NaN  \n",
       "kr01c02      0.0       1    NaN  "
      ]
     },
     "execution_count": 22,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "pnew.parameter_data.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style>\n",
       "    .dataframe thead tr:only-child th {\n",
       "        text-align: right;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: left;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>obsnme</th>\n",
       "      <th>obsval</th>\n",
       "      <th>weight</th>\n",
       "      <th>obgnme</th>\n",
       "      <th>extra</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>obsnme</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>h_obs01_1</th>\n",
       "      <td>h_obs01_1</td>\n",
       "      <td>0.051396</td>\n",
       "      <td>25.0000</td>\n",
       "      <td>head</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>h_obs01_2</th>\n",
       "      <td>h_obs01_2</td>\n",
       "      <td>0.022156</td>\n",
       "      <td>0.0000</td>\n",
       "      <td>head</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>h_obs02_1</th>\n",
       "      <td>h_obs02_1</td>\n",
       "      <td>0.046879</td>\n",
       "      <td>152.1458</td>\n",
       "      <td>head</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>h_obs02_2</th>\n",
       "      <td>h_obs02_2</td>\n",
       "      <td>0.020853</td>\n",
       "      <td>0.0000</td>\n",
       "      <td>head</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>h_obs03_1</th>\n",
       "      <td>h_obs03_1</td>\n",
       "      <td>0.036584</td>\n",
       "      <td>152.1458</td>\n",
       "      <td>head</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "              obsnme    obsval    weight obgnme  extra\n",
       "obsnme                                                \n",
       "h_obs01_1  h_obs01_1  0.051396   25.0000   head    NaN\n",
       "h_obs01_2  h_obs01_2  0.022156    0.0000   head    NaN\n",
       "h_obs02_1  h_obs02_1  0.046879  152.1458   head    NaN\n",
       "h_obs02_2  h_obs02_2  0.020853    0.0000   head    NaN\n",
       "h_obs03_1  h_obs03_1  0.036584  152.1458   head    NaN"
      ]
     },
     "execution_count": 23,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "pnew.observation_data.head()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "The `write(filename)` method allows you to write a PEST control file with the current state of the object: that is, make a new PEST control file with the current information contained in an object."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "metadata": {},
   "outputs": [],
   "source": [
    "pnew.write(\"test.pst\")"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 2",
   "language": "python",
   "name": "python2"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 2
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython2",
   "version": "2.7.13"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 1
}
